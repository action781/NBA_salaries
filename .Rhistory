facet_grid(~ f1)
ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f2)
ggplot(aes(y = boxthis, x = f2, fill = "m"), data = df) + geom_boxplot()
ggplot(aes(y = boxthis, x = f2, fill = "w"), data = df) + geom_boxplot()
ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f1)
g <- ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f1)
saveRDS(g, file = "stack1.png")
ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f1)
ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f1)
ggplot(aes(y = boxthis, x = f2, fill = f1), data = df) +
geom_boxplot() +
facet_grid(~ f1)
ggsave("stack1.png")
m <- matrix(1:9,3,3, byrow = TRUE)
m
m2 <- matrix(m, ncol = 1, byrow = TRUE)
m2
m3 <- matrix(m, ncol = 1, byrow = FALSE)
m3
identical(m2,m3)
View(m)
View(m2)
View(m3)
?matrix
View(m)
?unlist
m2 <- unlist(matrix(m, ncol = 1, byrow = TRUE))
m2 <- matrix(unlist(m, ncol = 1, byrow = TRUE)))
unlist(m)
str(unlist(m))
?bind_rows
?as.list
m2 <- as.list(m, ncol = 1, byrow = TRUE)
m2
m2 <- as.list(m)
m2
desiredM <- matrix(t(m), ncol = 1)
desiredM
str(m)
?sapply
numericDF <- sapply(df, as.factor)
View(numericDF)
library("XML"); library(tidyverse); library(plyr)
# List of all NBA teams
teams <- c("atlanta_hawks", "brooklyn_nets", "boston_celtics", "charlotte_hornets", "chicago_bulls", "cleveland_cavaliers", "dallas_mavericks", "denver_nuggets", "detroit_pistons", "golden_state_warriors", "houston_rockets", "indiana_pacers", "los_angeles_clippers", "los_angeles_lakers", "memphis_grizzlies", "miami_heat", "milwaukee_bucks", "minnesota_timberwolves", "new_orleans_pelicans", "new_york_knicks", "oklahoma_city_thunder", "orlando_magic", "philadelphia_76ers", "phoenix_suns", "portland_trail_blazers", "sacramento_kings", "san_antonio_spurs", "toronto_raptors", "utah_jazz", "washington_wizards")
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries[[i]]$team <- teams[i]
print(teams[i])
}
names(salaries) <- teams
df <- bind_rows(salaries)
View(df)
numericDF <- sapply(df, as.factor)
View(numericDF)
str(numericDF)
numericDF <- as.tibble(sapply(df, as.factor))
View(numericDF)
str(numericDF)
numericDF <- as.data.frame(sapply(df, as.factor))
View(numericDF)
str(numericDF)
numericDF <- as.data.frame(sapply(df, as.factor)) %>%
as.numeric(gsub( "[$,]", "", df$`2017/18`))
numericDF <- as.data.frame(sapply(df, as.factor)) %>%
sapply(as.numeric(gsub( "[$,]", "", df$`2017/18`)))
numericDF <- as.data.frame(sapply(df, as.factor)) %>%
numericDF <- sapply(numericDF, gsub, "[$,]", "")
View(numericDF)
str(numericDF)
?gsub
df <- bind_rows(salaries)
numericDF <- as.data.frame(sapply(df, as.factor))
numericDF <- sapply(numericDF, gsub, pattern ="[$,]", replacement = "")
View(numericDF)
numericDF <- sapply(numericDF, as.numeric)
?sapply
View(df)
?fill
?replace_na
numericDF <- sapply(numericDF, gsub, pattern ="[$,]", replacement = "")
numericDF <- as.data.frame(sapply(df, as.factor))
numericDF <- sapply(numericDF, gsub, pattern ="[$,]", replacement = "")
View(numericDF)
str(numericDF)
numericDF <- as.data.frame(sapply(numericDF, gsub, pattern ="[$,]", replacement = ""))
numericDF <- as.data.frame(sapply(numericDF, gsub, pattern ="[$,]", replacement = ""))
View(numericDF)
numericDF <- as.data.frame(sapply(df, as.factor))
View(numericDF)
View(numericDF)
View(numericDF)
?sapply
numericDF <- as.data.frame(sapply(df, as.factor))
df <- bind_rows(salaries)
View(df)
df$`2017/18` <- as.factor(df$`2017/18`)
df <- bind_rows(salaries)
numericDF <- as.data.frame(sapply(df, as.factor))
View(numericDF)
?as.numeric
?gsub
df$`2017/18` <- as.factor(df$`2017/18`) %>%
gsub("[$,]", "")
df <- bind_rows(salaries)
df$`2017/18` <- gsub("[$,]", "", df$`2017/18`)
df$`2017/18` <- as.numeric(df$`2017/18`)
View(df)
numericDF[,-1] <- as.numeric(gsub("[$]", "", as.matrix(df[,-1])))
View(numericDF)
df <- bind_rows(salaries)
numericDF <- as.data.frame(sapply(df, as.factor))
numericDF <- as.data.frame(sapply(df, as.factor))
View(numericDF)
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(df[,-c(1,8)])))
View(numericDF)
salaries_df <- bind_rows(salaries_list)
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
print(teams[i])
}
names(salaries_list) <- teams
salaries_df <- bind_rows(salaries_list)
View(salaries_df)
salaries_df <- as.data.frame(sapply(salaries_df, as.factor))
View(salaries_df)
salaries_df[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(salaries_df)))
View(salaries_df)
View(salaries_df)
# Combine dfs into one df
salaries_df <- bind_rows(salaries_list)
salaries_df <- as.data.frame(sapply(salaries_df, as.factor))
salaries_df[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(salaries_df)))
# Combine dfs into one df
salaries_df <- bind_rows(salaries_list)
salaries_df <- as.data.frame(sapply(salaries_df, as.factor))
salaries_df[,-c(1,8)] <- as.numeric(gsub("[$,]", "", salaries_df))
View(salaries_df)
salaries_df[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(salaries_df)))
View(salaries_df)
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
print(teams[i])
}
# List of all NBA teams
teams <- c("atlanta_hawks", "brooklyn_nets", "boston_celtics", "charlotte_hornets", "chicago_bulls", "cleveland_cavaliers", "dallas_mavericks", "denver_nuggets", "detroit_pistons", "golden_state_warriors", "houston_rockets", "indiana_pacers", "los_angeles_clippers", "los_angeles_lakers", "memphis_grizzlies", "miami_heat", "milwaukee_bucks", "minnesota_timberwolves", "new_orleans_pelicans", "new_york_knicks", "oklahoma_city_thunder", "orlando_magic", "philadelphia_76ers", "phoenix_suns", "portland_trail_blazers", "sacramento_kings", "san_antonio_spurs", "toronto_raptors", "utah_jazz", "washington_wizards")
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
print(teams[i])
}
names(salaries_list) <- teams
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
}
names(salaries_list) <- teams
salaries_df <- bind_rows(salaries_list)
View(salaries_df)
factorDF <- data.frame(sapply(salaries_df, as.factor))
View(factorDF)
factorDF <- as.data.frame(sapply(salaries_df, as.factor))
View(factorDF)
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF)))
View(numericDF)
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
}
names(salaries_list) <- teams
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
}
# List of all NBA teams
teams <- c("atlanta_hawks", "brooklyn_nets", "boston_celtics", "charlotte_hornets", "chicago_bulls", "cleveland_cavaliers", "dallas_mavericks", "denver_nuggets", "detroit_pistons", "golden_state_warriors", "houston_rockets", "indiana_pacers", "los_angeles_clippers", "los_angeles_lakers", "memphis_grizzlies", "miami_heat", "milwaukee_bucks", "minnesota_timberwolves", "new_orleans_pelicans", "new_york_knicks", "oklahoma_city_thunder", "orlando_magic", "philadelphia_76ers", "phoenix_suns", "portland_trail_blazers", "sacramento_kings", "san_antonio_spurs", "toronto_raptors", "utah_jazz", "washington_wizards")
# Scrape all team salaries from hoopshype
generic_link <- "http://hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
}
names(salaries_list) <- teams
salaries_df <- bind_rows(salaries_list)
View(salaries_df)
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,2:7] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF)))
View(numericDF)
salaries_df <- bind_rows(salaries_list)
salaries_df[is.na()] <- "$0"
?readHTMLTable
complete(mtcars, cyl, gear, carb)
?replace_na
salaries_df <- replace_na(salaries_df, list(rep("$0")))
View(salaries_df)
salaries_df <- replace_na(salaries_df, "$0")
salaries_df[is.na(salaries_df)] <- 0
View(salaries_df)
salaries_df <- bind_rows(salaries_list)
salaries_df[is.na(salaries_df)] <- "$0"
View(salaries_df)
salaries_df[376,2]
sum(is.na(salaries_df)
)
salaries_df[salaries_df == ""] <- "$0"
View(salaries_df)
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,2:7] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF)))
View(numericDF)
numericDF <- as.numeric(gsub("[$,]", "", as.matrix(numericDF)))
salaries_df <- bind_rows(salaries_list)
salaries_df[salaries_df == ""] <- "$0"
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF <- as.numeric(gsub("[$,]", "", as.matrix(numericDF)))
salaries_df <- bind_rows(salaries_list)
salaries_df[salaries_df == ""] <- "$0"
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,-1] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF[,-1])))
View(numericDF)
salaries_df <- bind_rows(salaries_list)
salaries_df[salaries_df == ""] <- "$0"
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF[,-c(1,8)])))
View(numericDF)
DT::datatable(numericDF)
?formatC
?dollar
sapply(numericDF[-c(1,8)], dollar)
?datatable
test <- sapply(numericDF[-c(1,8)], dollar)
View(test)
str(test)
library("gtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
?mixedsort
# Combine dfs from list into one df
salaries_df <- bind_rows(salaries_list)
# Fill NAs
salaries_df[salaries_df == ""] <- "$0"
# Convert $ into numeric
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF[,-c(1,8)])))
DT::datatable(numericDF)
?save
datatable(numericDF)
library(DT)
datatable(numericDF)
?dollar
currencyDF <- numericDF
currencyDF[,-c(1,8)] <- dollar(numericDF[,-c(1,8)])
currencyDF[,-c(1,8)] <- sapply(currencyDF[,-c(1,8)], dollar)
View(currencyDF)
DT::datatable(currencyDF)
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF[,-c(1,8)])))
DT::datatable(numericDF)
DT::datatable(currencyDF)
?formatCurrency
DT::datatable(numericDF)
DT::datatable(currencyDF)
packages = c("shiny", "ggplot2", "hexbin", "dplyr", "httr", "jsonlite")
install.packages(packages, repos = "https://cran.rstudio.com/")
library(shiny)
runGitHub("ballr", "toddwschneider")
packages = c("shiny", "ggplot2", "hexbin", "dplyr", "httr", "jsonlite")
install.packages(packages, repos = "https://cran.rstudio.com/")
library(shiny)
runGitHub("ballr", "toddwschneider")
?install.packages
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
runGitHub("ballr", "toddwschneider")
install_github("rtelmore/ballr")
library(devtools)
install_github("rtelmore/ballr")
library("ballr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
NBAStandingsByDate()
?NBAStandingsByDate
NBAStandingsByDate("2008-06-15")
NBAStandingsByDate("2008-03-15")
NBAStandingsByDate("2017-03-15")
?iconvlist
?navbar
library("XML"); library(tidyverse); library(plyr); library(rmarkdown)
rmarkdown::render_site()
?dollar
# Load libraries
# Always use message = false, warning = false.  echo = FALSE recommended.
library(XML); library(tidyverse); library(plyr); library(rmarkdown); library(scales); library(knitr); library(shiny)
?p()
?readHTMLTable
# List of all NBA teams
teams <- c("atlanta_hawks", "brooklyn_nets", "boston_celtics", "charlotte_hornets", "chicago_bulls", "cleveland_cavaliers", "dallas_mavericks", "denver_nuggets", "detroit_pistons", "golden_state_warriors", "houston_rockets", "indiana_pacers", "los_angeles_clippers", "los_angeles_lakers", "memphis_grizzlies", "miami_heat", "milwaukee_bucks", "minnesota_timberwolves", "new_orleans_pelicans", "new_york_knicks", "oklahoma_city_thunder", "orlando_magic", "philadelphia_76ers", "phoenix_suns", "portland_trail_blazers", "sacramento_kings", "san_antonio_spurs", "toronto_raptors", "utah_jazz", "washington_wizards")
p()
# Load libraries
# Always use message = false, warning = false.  echo = FALSE recommended.
library(XML); library(tidyverse); library(plyr); library(rmarkdown); library(scales); library(knitr); library(shiny); library(htmltools); library(DT)
?htmlOutput
?htmlTemplate
?htmltools
htmltools::tags
player_list <- readHTMLTable("http://games.espn.com/fba/freeagency?leagueId=117819&teamId=1&seasonId=2017", stringsAsFactors = FALSE)
library("ballr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
stats <- NBAPerGameStatistics(season = 2017)
stats <- NBAPerGameStatistics(season = 2017)
# Load libraries
# Always use message = false, warning = false.  echo = FALSE recommended.
library(XML); library(tidyverse); library(plyr); library(rmarkdown); library(scales); library(knitr); library(shiny); library(htmltools); library(DT)
# List of all NBA teams
teams <- c("atlanta_hawks", "brooklyn_nets", "boston_celtics", "charlotte_hornets", "chicago_bulls", "cleveland_cavaliers", "dallas_mavericks", "denver_nuggets", "detroit_pistons", "golden_state_warriors", "houston_rockets", "indiana_pacers", "los_angeles_clippers", "los_angeles_lakers", "memphis_grizzlies", "miami_heat", "milwaukee_bucks", "minnesota_timberwolves", "new_orleans_pelicans", "new_york_knicks", "oklahoma_city_thunder", "orlando_magic", "philadelphia_76ers", "phoenix_suns", "portland_trail_blazers", "sacramento_kings", "san_antonio_spurs", "toronto_raptors", "utah_jazz", "washington_wizards")
# Scrape all team salaries from hoopshype
generic_link <- "http://www.hoopshype.com/salaries/"
salaries_list <- as.list(NULL)
for(i in 1:length(teams)){
link <- paste(generic_link, teams[i], sep = "")
salaries_list[[i]] <- readHTMLTable(link, stringsAsFactors = FALSE)[[1]]
salaries_list[[i]]$team <- teams[i]
}
names(salaries_list) <- teams
# Combine dfs from list into one df
salaries_df <- bind_rows(salaries_list)
# Fill NAs
salaries_df[salaries_df == ""] <- "$0"
# Convert $ into numeric
numericDF <- as.data.frame(sapply(salaries_df, as.factor))
numericDF[,-c(1,8)] <- as.numeric(gsub("[$,]", "", as.matrix(numericDF[,-c(1,8)])))
currencyDF <- numericDF
currencyDF[,-c(1,8)] <- sapply(currencyDF[,-c(1,8)], dollar)
View(stats)
per_game_stats <- NBAPerGameStatistics(season = 2017)
View(per_game_stats)
per_game_stats %>%
select(Pos, Tm, MP)
per_game_stats %>%
select(Player, Pos, Tm, MP)
per_game_stats %>%
select(Player, Pos, Tm, MP, FGP, 3PP, TRB, AST, PS/G)
per_game_stats %>%
select(Player, Pos, Tm, MP, FGP, /3PP/, TRB, AST, PS/G)
per_game_stats %>%
select(Player, Pos, Tm, MP, FGP, `3PP`, TRB, AST, PS/G)
per_game_stats %>%
select(Player, Pos, Tm, MP, FGP, `3PP`, TRB, AST, `PS/G`)
per_game_stats %>%
select(Player, Pos, MP, TRB, AST, `PS/G`, FGP, `3PP`)
per_game_stats %>%
select(Player, Pos, MP, `PS/G`, TRB, AST, FGP, `3PP`)
per_game_stats %>%
select(Player, Pos, MP, `PS/G`, TRB, AST, FGP, `3PP`) %>%
group_by(Player)
per_game_stats <- NBAPerGameStatistics(season = 2017)
per_game_stats %>%
select(Player, Pos, G, MP, `PS/G`, TRB, AST, FGP, `3PP`) %>%
group_by(Player)
per_game_stats <- NBAPerGameStatistics(season = 2017)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`, TRB, AST, FGP, `3PP`) %>%
group_by(Player)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`, TRB) %>%
group_by(Player)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Team) %>%
filter(Games == "TOT" | n()==1)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Tm) %>%
filter(Games == "TOT" | n()==1)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Tm) %>%
filter(G == "TOT" | n()==1)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Pos, Tm) %>%
filter(G == "TOT" | n()==1)
# Load libraries
# Always use message = false, warning = false.  echo = FALSE recommended.
library(XML); library(tidyverse); library(plyr); library(rmarkdown); library(scales); library(knitr); library(shiny); library(htmltools); library(DT)
per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Pos, Tm) %>%
filter(G == "TOT" | n()==1)
filter <- per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Pos, Tm) %>%
filter(G == "TOT" | n()==1)
(filter <- per_game_stats %>%
select(Player, Pos, Tm, G, MP, `PS/G`) %>%
group_by(Player, Pos, Tm) %>%
filter(G == "TOT" | n()==1))
(filter <- per_game_stats %>%
group_by(Player, Pos) %>%
filter(G == "TOT" | n()==1))
(filter <- per_game_stats %>%
group_by(Player, Pos) %>%
filter(Tm == "TOT" | n()==1))
set.seed(1)
df <- data.frame(rep(
sample(c(2012,2016),10, replace = T)),
sample(c('Treat','Control'),10,replace = T),
runif(10,0,1),
runif(10,0,1),
runif(10,0,1))
View(df)
colnames(df) <- c('Year','Group','V1','V2','V3')
View(df)
summary.table = df %>%
group_by(Year, Group) %>%
summarise_all(funs(sd,median,mean)) %>%
#     mutate(N = n())
summary.table = df %>%
group_by(Year, Group) %>%
summarise_all(funs(sd,median,mean))
# Load libraries; echo = FALSE recommended unless want to show users.
library(tidyverse); library(knitr); library(DT)
summary.table = df %>%
group_by(Year, Group) %>%
summarise_all(funs(sd,median,mean))
View(summary.table)
summary.table = df %>%
group_by(Year, Group) %>%
summarise_all(funs(sd,median,mean)) %>%
mutate(count = n())
summary.table = df %>%
group_by(Year, Group) %>%
mutate(count = n()) %>%
summarise_all(funs(sd,median,mean))
summary.table = df %>%
group_by(Year, Group) %>%
summarise(count = n()) %>%
summarise_all(funs(sd,median,mean))
summary.table = df %>%
group_by(Year, Group) %>%
summarise(sd,median,mean, n()))
summary.table = df %>%
group_by(Year, Group) %>%
summarise(sd,median,mean, n())
detach("package:plyr", unload=TRUE)
detach("plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:ballr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:dplyr", unload=TRUE)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:plyr", unload=TRUE)
summary.table = df %>%
group_by(Year, Group) %>%
summarise(sd,median,mean, n())
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
summary.table = df %>%
group_by(Year, Group) %>%
summarise(sd,median,mean, n())
summary.table = df %>%
group_by(Year, Group) %>%
summarise(sd,median,mean, n())
summary.table = df %>%
group_by(Year, Group) %>%
summarise_all(funs(n(),sd,median,mean))
View(summary.table)
install.packages(c("devtools","rstudioapi"), dependencies=TRUE, repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
devtools::install_github(repo = "dadrivr/ffanalytics")
devtools::install_github(repo = "dadrivr/ffanalytics")
library("ffanalytics", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
# Load libraries
# Always use message = false, warning = false.  echo = FALSE recommended.
library(XML); library(tidyverse); library(plyr); library(rmarkdown); library(scales); library(knitr); library(shiny); library(htmltools); library(DT); library(ballr)
?NBAPerGameStatistics
